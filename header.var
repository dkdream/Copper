/*-*- mode: c;-*-*/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct _yyclass  YYClass;
typedef struct _yystack  YYStack;
typedef struct _yystate  YYState;
typedef struct _yythunk  YYThunk;
typedef struct _yycache  YYCache;

typedef int  (*YYRule)(YYClass* yySelf, YYStack* stack);
typedef void (*YYAction)(YYClass* yySelf, YYThunk thunk);

typedef int  (*YYInput)(YYClass* yySelf, char* buffer, int max_size);
typedef void (*YYSave)(YYClass* yySelf, YYState* state);
typedef void (*YYRestore)(YYClass* yySelf, YYState* state);
typedef void (*YYBegin)(YYClass* yySelf, YYStack* stack);
typedef void (*YYEnd)(YYClass* yySelf, YYStack* stack);
typedef void (*YYDebug)(YYClass* yySelf, const char* format, ...);
typedef void (*YYMark)(YYClass* yySelf, const char* name);
typedef void (*YYCollect)(YYClass* yySelf, const char* name);

typedef int  (*YYApply)(YYClass* yySelf,
                        YYStack* yystack,
                        YYRule function,
                        const char* name);

#ifndef YYSTYPE
#define YYSTYPE	int
#endif

struct  _yyclass {
    char *    buf;
    int	      buflen;
    int	      pos;
    int	      limit;
    char *    text;
    int	      textlen;
    int	      begin;
    int	      end;
    int	      textmax;

    /* action list */
    YYThunk * thunks;
    int	      thunkslen;
    int       thunkpos;

    /* data stack */
    YYSTYPE   result;
    int       frame;
    int       valslen;
    YYSTYPE * vals;

    /**/
    YYCache * cache;

    /*method table*/
    YYInput   input_;
    YYSave    save_;
    YYRestore restore_;
    YYBegin   begin_;
    YYEnd     end_;
    YYDebug   debug_;
    YYMark    mark_;
    YYCollect collect_;
    YYApply   apply_;
};

/*-- end of header --*/

